buildscript {
    dependencies {
        classpath plgs.defs.backend.springBoot
        classpath plgs.defs.backend.swaggerCodegen
    }
}

apply from: "$rootDir/build-configs.gradle"
apply from: "$rootDir/build-deps.gradle"

def OPENAPI_SOURCE = "$rootDir/kleo-api-v4.yaml"

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.hidetake.swagger.generator'

sourceCompatibility = configs.compiler.sourceCompatibility
targetCompatibility = configs.compiler.targetCompatibility

dependencies {
    compileOnly deps.defs.backend.lombok
    testCompileOnly deps.defs.backend.lombok

    compile deps.defs.backend.apacheLang3

    compile deps.defs.backend.jpaApi
    compile deps.defs.backend.postgresDriver
    compile deps.defs.backend.h2Driver

    compile deps.defs.backend.springBoot
    compile deps.defs.backend.springBootWeb
    compile deps.defs.backend.springBootData
    compile deps.defs.backend.springBootSecurity
    compile deps.defs.backend.springSecurityOAuth2
    compile deps.defs.backend.springSecurityJwt

    compile deps.defs.backend.htmlUnit

    compile deps.defs.backend.swaggerSpringfox
    swaggerCodegen deps.defs.backend.swaggerCodegenCli

    testCompile deps.defs.backend.junit
    testCompile deps.defs.backend.assertj
    testCompile deps.defs.backend.mockito
}

swaggerSources {
    kleo {
        inputFile = file(OPENAPI_SOURCE)
        code {
            language = 'spring'
            configFile = file('swagger.json')
            components = [
                    models: true, apis: true,
                    supportingFiles: 'SwaggerDocumentationConfig.java'
            ]
        }
    }
}
compileJava.dependsOn swaggerSources.kleo.code
sourceSets.main.java.srcDirs += file("$buildDir/swagger-code-kleo/src/main/java")

clean {
    delete fileTree('.') { include '**/*.log' }
}